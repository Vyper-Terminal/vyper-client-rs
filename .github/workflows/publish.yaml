name: Rust CI and Publish

on:
    push:
        branches:
            - main

jobs:
    build-and-publish:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true

            - name: Install dependencies
              run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

            - name: Cache cargo registry
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/registry
                  key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-registry-

            - name: Cache cargo index
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/index
                  key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-index-

            - name: Cache cargo build
              uses: actions/cache@v3
              with:
                  path: target
                  key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-build-

            - name: Build and test
              env:
                  VYPER_API_KEY: ${{ secrets.VYPER_API_KEY }}
              run: cargo test --all --verbose

            - name: Publish to crates.io
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              env:
                  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
              run: |
                  VERSION=$(cargo pkgid | sed 's/.*#//')
                  if [ "$(git tag -l "$VERSION")" ]; then
                    echo "Version $VERSION already exists, skipping publish."
                  else
                    git config --global user.email "actions@github.com"
                    git config --global user.name "GitHub Actions"
                    git tag "$VERSION"
                    cargo publish
                  fi

            - name: Push tags to GitHub
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  git config --global user.email "actions@github.com"
                  git config --global user.name "GitHub Actions"
                  git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
                  git push origin --tags
